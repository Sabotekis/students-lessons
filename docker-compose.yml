version: '3.8'

services:
  mongo:
    image: mongo:latest
    container_name: mongo_container
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      edlus:
        ipv4_address: 192.168.100.2

  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    working_dir: /server
    command: >
      bash -c "npm install && npm run dev"
    env_file:
      - ./server/.env
    networks:
      edlus:
        ipv4_address: 192.168.100.3
    develop:
      watch:
        - action: sync
          path: ./server
          target: /server
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    working_dir: /client
    command: >
      bash -c "npm install && npm start"
    networks:
      edlus:
        ipv4_address: 192.168.100.4
    develop:
      watch:
        - action: sync
          path: ./client
          target: /client
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      edlus:
        ipv4_address: 192.168.100.5

networks:
  edlus:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24

volumes:
  mongo-data: